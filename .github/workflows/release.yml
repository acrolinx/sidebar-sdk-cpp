name: Release

on:
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release
  Solution_Name: Acrolinx.Sidebar.SDK.sln
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: mkdir download
      run: |
        mkdir download
        mkdir build_wrapper_output_directory

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: C++ Test Artifacts
        path: Test\testResult.xml

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    - name: Install components
      run: .github\scripts\install-vs-components.ps1

    - name: Install sonar-scanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v3

    - name: Replace version info
      run: |
        $version = git describe --abbrev=0 --tags
        $version = $version.substring(1) + "." + $env:BUILD_NUMBER
        $commaSeperatedVersion = $version -replace '\.' , ','
        Write-Host $commaSeperatedVersion
        ((Get-Content -path Acrolinx.Sidebar.SDK\Resource.h -Raw) -replace '1\.0\.0\.99', $version) | Set-Content -Path Acrolinx.Sidebar.SDK\Resource.h
        ((Get-Content -path Acrolinx.Sidebar.SDK\Resource.h -Raw) -replace '1,0,0,99', $commaSeperatedVersion) | Set-Content -Path Acrolinx.Sidebar.SDK\Resource.h

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build x86 bit
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=Win32 ${{env.SOLUTION_FILE_PATH}} /t:Rebuild

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      run: |
        sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

    - name: Build x64 bit
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}

    - name: Patch version number in nuget spec
      run: |
        $version = git describe --abbrev=0 --tags
        $version = $version.substring(1) + "." + $env:BUILD_NUMBER
        ((Get-Content -path Acrolinx.Sidebar.SDK.nuspec -Raw) -replace '\$version\$', $version) | Set-Content -Path Acrolinx.Sidebar.SDK.nuspec

    - name: Create nuget package
      run: nuget pack Acrolinx.Sidebar.SDK.nuspec -NonInteractive

    - name: Add nuget source to Github to publish on Github registry
      run: nuget source Add -Name "GitHub" -Source "https://nuget.pkg.github.com/acrolinx/index.json" -UserName ${{ github.actor }} -Password ${{ secrets.GITHUB_TOKEN }}

    - name: Push nuget package to GitHub
      shell: powershell
      run: |
        $NugetPackage  = Get-ChildItem *.nupkg -Exclude *.symbols.nupkg -name
        Write-Host "Pushing to Github registry.. NuGet package name is : " $NugetPackage
        nuget push $NugetPackage -source "GitHub" -ApiKey  ${{ secrets.GITHUB_TOKEN }}

    - name: Push nuget package to Nuget.org (only for tags)
      run: |
        $NugetPackage = Get-ChildItem *.nupkg -Exclude *.symbols.nupkg -name
        Write-Host "Pushing to Nuget.org. NuGet package name is : " $NugetPackage
        nuget push $NugetPackage ${{ secrets.NUGET_API_KEY }} -Source nuget.org -Timeout 600

    - name: Create a release in GitHub (only for tags)
      uses: softprops/action-gh-release@v2
      with:
        files: |
          *.nupkg
          Acrolinx.Sidebar.SDK.Setup\bin\Release\*
          Release\*
          x64\Release\*
          Acrolinx.Sidebar.SDK\Resource.h
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: C++ Build Artifacts
        path: |
          Acrolinx.Sidebar.SDK.Setup\bin\Release\*
          Release\*
          x64\Release\*
          *.nupkg
          Acrolinx.Sidebar.SDK\Resource.h
